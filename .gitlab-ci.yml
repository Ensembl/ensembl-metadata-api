# https://hub.docker.com/r/library/python/tags/
image: python:3.8

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  METADATA_DB_HOST: "$CI_METADATA_DB_HOST"
  METADATA_DB_PORT: "$CI_METADATA_DB_PORT"
  METADATA_DB_USER: "$CI_METADATA_DB_USER"
  METADATA_DB_PASSWORD: "$CI_METADATA_DB_PASS"
  TAXON_DB_HOST: "$CI_TAXON_DB_HOST"
  TAXON_DB_PORT: "$CI_TAXON_DB_PORT"
  TAXON_DB_USER: "$CI_TAXON_DB_USER"
  TAXON_DB_PASSWORD: "$CI_TAXON_DB_PASS"

stages:
  - test
  - build
  - deploy

cache:
  paths:
    - .cache/pip
    - venv/


test:
  stage: test
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements-test.txt
    - pip install -e .

  script:
    - coverage run -m pytest
    - coverage report -m


build:
  stage: build
  only:
    - tags

  variables:
    IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    LATEST_TAG: ${CI_REGISTRY_IMAGE}:latest
    DOCKER_TLS_CERTDIR: ""

  image: docker

  services:
    - docker:dind

  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker info

  script:
    - docker build -t $IMAGE_TAG --no-cache .
    - docker tag $IMAGE_TAG $LATEST_TAG
    - docker push $IMAGE_TAG
    - docker push $LATEST_TAG
    - docker logout $CI_REGISTRY


.deploy:
  stage: deploy

  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}

  image: ${TOOLS_IMAGE}:${TOOLS_TAG}

  before_script:
    - git clone https://oauth2:${GITLAB_ACCESS_TOKEN}@${GITLAB_HOST}/${MANIFESTS_NAMESPACE}/k8s-manifests.git

  script:
    - sed -i "s#<CI_METADATA_DB_HOST>#${CI_METADATA_DB_HOST}#g" k8s-manifests/metadata-grpc/configmap.yaml
    - sed -i "s#<CI_METADATA_DB_PORT>#${CI_METADATA_DB_PORT}#g" k8s-manifests/metadata-grpc/configmap.yaml
    - sed -i "s#<CI_METADATA_DB_USER>#${CI_METADATA_DB_USER}#g" k8s-manifests/metadata-grpc/configmap.yaml
    - sed -i "s#<CI_TAXON_DB_HOST>#${CI_TAXON_DB_HOST}#g" k8s-manifests/metadata-grpc/configmap.yaml
    - sed -i "s#<CI_TAXON_DB_PORT>#${CI_TAXON_DB_PORT}#g" k8s-manifests/metadata-grpc/configmap.yaml
    - sed -i "s#<CI_TAXON_DB_USER>#${CI_TAXON_DB_USER}#g" k8s-manifests/metadata-grpc/configmap.yaml
    - sed -i "s#<CI_METADATA_DB_PASS>#${CI_METADATA_DB_PASS}#g" k8s-manifests/metadata-grpc/secret.yaml
    - sed -i "s#<CI_TAXON_DB_PASS>#${CI_TAXON_DB_PASS}#g" k8s-manifests/metadata-grpc/secret.yaml
    - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_IMAGE}#g" k8s-manifests/metadata-grpc/deployment.yaml
    - sed -i "s#<CI_ENVIRONMENT_SLUG>#${CI_ENVIRONMENT_SLUG}#g" k8s-manifests/metadata-grpc/deployment.yaml
    - kubectl apply -f k8s-manifests/metadata-grpc/configmap.yaml
    - kubectl apply -f k8s-manifests/metadata-grpc/secret.yaml
    - kubectl apply -f k8s-manifests/metadata-grpc/deployment.yaml

deploy_staging:
  extends: .deploy

  only:
    - tags

  environment:
    name: staging

  before_script:
    - git clone https://oauth2:${GITLAB_ACCESS_TOKEN}@${GITLAB_HOST}/${MANIFESTS_NAMESPACE}/k8s-manifests.git
    - cd k8s-manifests
    - git checkout staging
    - cd ..


deploy_prod:
  extends: .deploy

  only:
    - /^release-.+$/

  except:
    - branches

  environment:
    name: prod
